<html py:extends="master.xhtml" py:strip="True">
<head py:block="head" py:strip="True">
    <title py:block="master_title">KS | Documents</title>
    <link rel="stylesheet" href="//cdn.jsdelivr.net/simplemde/latest/simplemde.min.css" />
    <script src="//cdn.jsdelivr.net/simplemde/latest/simplemde.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/showdown/1.8.6/showdown.min.js"></script>
    <script id="template" type="text/html">
        <![CDATA[
        <form id="document-form" class="form-horizontal" on-submit="submit-form">
            <div class="row mt-2 pb-3 mb-3 border-bottom">
                <h1 class="col type-page-title">${_("New Document")}</h1>
                <div class="col-md-auto text-right">
                    <button type="button" class="btn btn-outline-warning"
                        onclick='ractive_document.create_output_plus();'>${h.material_icon('create')} ${_('Create Output+')}
                    </button>
                    {{#if saving}}
                        ${_("Saving...")}
                    {{else}}
                        <button type="submit" class="btn btn-outline-success">${h.material_icon('save')} ${_("Save")}</button>
                    {{/if}}
                </div>
            </div>


            <div class="form-group row align-items-center">
                <div class="col-4">
                    <input id="extra-fields-form-title" type="text" class="form-control {{errors.title ? 'is-invalid' : ''}}"
                           placeholder="${_('Title')}" value="{{create.title}}"/>
                    {{#if errors.title}}<span class="invalid-feedback">{{errors.title}}</span>{{/if}}
                </div>
                <div class="col">
                    <label for="extra-fields-form-title" class="help-text">
                        ${h.material_icon('help_outline')} ${_('Title your document (eg. Privacy Policy).')}
                    </label>
                </div>
            </div>

            <a class="btn btn-primary" data-toggle="collapse" href="#metadata">Metadata</a>
            <br/>

            <div id="metadata" class="collapse">
                <br/>

                <div class="form-group">
                    <textarea class="form-control" id="extra-fields-form-description" aria-describedby="description-help" placeholder="${_('Description')}" value="{{create.description}}">{{create.description}}</textarea>
                    <label for="extra-fields-form-description" class="help-text">${h.material_icon('help_outline')} Give a short description of the problem that your document solves.</label>
                </div>


                <div class="form-group">
                    <input id="extra-fields-form-license" type="text" class="form-control" placeholder="${_('License')}" value="{{create.license}}"/>
                    <label for="extra-fields-form-license" class="help-text">${h.material_icon('help_outline')}
                        Choose the license under which you allow use of your knowledge tool (eg. MIT, LGPL, CC-xx...).</label>
                </div>

                <div class="form-group">
                    <input id="extra-fields-form-version" type="text" class="form-control" placeholder="${_('Version')}" value="{{create.version}}"/>
                    <label for="extra-fields-form-version" class="help-text">${h.material_icon('help_outline')}
                        Insert a sequential versioning number (eg. 1.0).</label>
                </div>

                <div class="form-group">
                    <input id="extra-fields-form-tags" type="text" class="form-control" placeholder="${_('Tags')}" value="{{create.tags}}"/>
                    <label for="extra-fields-form-tags" class="help-text">${h.material_icon('help_outline')}
                        Comma separated values tags.</label>
                </div>
            </div>
            <br/>

            <h5 class="text-primary">Document editor</h5>

            <div class="row">
                <div class="form-group col">
                    <textarea id="ks_editor"></textarea>
                </div>
            </div>
        </form>
        ]]>
    </script>
</head>

<body py:block="body" py:strip="True">
<div id="target"></div>

<script>
    //<![CDATA[

    var KSDocument = Ractive.extend({
        template: '#template',
        on: {
            init() {
                var self = this;
                self.set('create.workspace', this.get('workspace'))

                if (!jQuery.isEmptyObject(self.document)) {
                    self.set('create', self.document)
                    self.set('submit_url', '${tg.url("/document/put")}')
                    self.set('create.tags', self.document['tags'].toString());
                }

                self.set('errors', {});
                self.set('saving', false);
                self.on('submit-form', function (event) {
                    return self.createDocument();
                });

                console.log(this.get('document'))
            },
            render() {
                var editor = KS.editor(jQuery("#ks_editor")[0]);
                this.set('editor', editor);
                editor.value(${Markup(h.script_json_encode(document.upcast if document else ''))});
                editor.codemirror.on('change', function() {
                    jQuery(window).bind('beforeunload', function(){
                        return "${_('Unsaved data! Are you sure you want to leave?')}";
                    });
                });
            }
        },

        add_widget_to_editor: function(id) {
            KS.addEntityToEditor(id, this.get('editor'))
        },

        createDocument: function() {
            var self = this;
            self.set('saving', true);
            jQuery(window).unbind('beforeunload');
            var params = self.get('create');
            params['content'] = self.get('editor').value();

            KS.ajax(self.submit_url, 
                    JSON.stringify(params), 
                    function(data){
                        self.set('create', {});
                        self.set('saving', false);
                        window.location.replace("${tg.url('/document/', params=dict(workspace=workspace))}");
                    }, 
                    function(data) {
                        self.set('errors', data.errors);
                        self.set('saving', false);
                    });

            return false;
        },
    
        create_output_plus: function() {
            var self = this;
            var highlighted_text = self.get('editor').codemirror.getSelection();

            if (highlighted_text === ''){
                alert('${_("ATTENTION: you dont have highlighted any text.")}');
                return;
            }

            KS.ajax("${tg.url('/output_plus')}", 
                    JSON.stringify({
                        'highlighted_text': highlighted_text,
                        'list_': KS.getEntitiesList(highlighted_text),
                        'workspace': self.create.workspace
                    }),
                    function(resp) {
                        alert("${_('An Output without filter was automatically created from ')} '" + highlighted_text +"'.");
                        self.add_widget_to_editor(resp['_id']);
                    });
        }
    });

    var ractive_document = new KSDocument({
        target: '#target',
        data: {
            document: ${Markup(h.script_json_encode(document))},
            workspace: '${workspace}',
            submit_url: '${tg.url("/document/post")}'
        }
    });
//]]>
</script>
</body>
</html>
